# # docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions

version: "3.9"
services:

  api:
    image: ndknitor/asp-template
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.ndkn.net`)"
      #- "traefik.http.routers.api.rule=Host(`api.ndkn.net`) && PathPrefix(`/api`)"

      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"

      - "com.centurylinklabs.watchtower.enable=true"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"
        reservations:
          cpus: "0.1"
          memory: "128M"
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-batch-size: "400"

  web:
    image: ndknitor/nextts-template
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`web.ndkn.net`)"
      #- "traefik.http.routers.web.rule=Host(`api.ndkn.net`) && PathPrefix(`/`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=3000"

      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"

      - "com.centurylinklabs.watchtower.enable=true"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"
        reservations:
          cpus: "0.1"
          memory: "128M"
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-batch-size: "400"

  loki:
    image: grafana/loki:3.0.0
    volumes:
      - ./loki-config.yaml:/mnt/config/loki-config.yaml
      - ./tmp:/tmp
    ports:
      - "127.0.0.1:3100:3100"
    command: -config.file=/mnt/config/loki-config.yaml

  grafana:
    image: grafana/grafana:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`api.ndkn.net`)"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/path`)"
      - "traefik.http.routers.grafana.entrypoints=web"

      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"

      - "traefik.http.middlewares.grafana-strip.stripprefix.prefixes=/path"
      - "traefik.http.routers.grafana.middlewares=grafana-strip"

      - "com.centurylinklabs.watchtower.enable=true"

    volumes:
      - ./grafana:/var/lib/grafana
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=https://api.ndkn.net/path


  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker=true" # Enable Docker provider
      - "--providers.docker.exposedbydefault=false" # Prevent automatic exposure of containers

      # Entry point for HTTP and HTTPS
      - "--entrypoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"

      # Redirect HTTP to HTTPS
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

      # Let's Encrypt certificate resolver
      - "--certificatesResolvers.myresolver.acme.tlsChallenge=true"
      - "--certificatesResolvers.myresolver.acme.email=ngodinhkhoinguyen69@gmail.com"
      - "--certificatesResolvers.myresolver.acme.storage=/letsencrypt/acme.json"

      # - "--api.insecure=true" # Enable Traefik Dashboard (use only for local testing)

    ports:
      - "80:80" # HTTP port
      - "443:443" # HTTPS port
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "90"
      - "--rolling-restart"
      - "--cleanup"
      #- "--http-api-update" # Enable webhook
    #environment:
    #  - WATCHTOWER_HTTP_API_TOKEN=mytoken # curl -H "Authorization: Bearer mytoken" localhost:8080/v1/update
    #labels:
    #  - "traefik.enable=true"
    #  - "traefik.http.routers.watchtower.rule=Host(`api.ndkn.net`) && PathPrefix(`/v1/update`)"
    #  - "traefik.http.routers.watchtower.entrypoints=web"
    #  - "traefik.http.services.watchtower.loadbalancer.server.port=8080"

    #  - "traefik.http.routers.watchtower.entrypoints=websecure"
    #  - "traefik.http.routers.watchtower.tls.certresolver=myresolver"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json:ro
volumes:
  letsencrypt:
