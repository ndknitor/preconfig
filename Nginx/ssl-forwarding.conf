upstream backend1 {
    server 192.0.2.3:443;
}

upstream backend2 {
    server 192.0.2.4:443;
}

# Define a catch-all server to handle non-matching requests
server {
    listen 443 ssl;
    server_name _;

    ssl_certificate /etc/nginx/ssl/default.crt;
    ssl_certificate_key /etc/nginx/ssl/default.key;

    return 444;
}

# Server block to handle connections based on SNI
server {
    listen 443 ssl;

    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Forward traffic based on the server name (SNI)
    ssl_preread on;

    set $backend "";

    if ($ssl_preread_server_name = "service1.example.com") {
        set $backend "backend1";
    }

    if ($ssl_preread_server_name = "service2.example.com") {
        set $backend "backend2";
    }

    proxy_pass $backend;

    # Optional: log the SNI server name for debugging
    access_log /var/log/nginx/sni-access.log;
    error_log /var/log/nginx/sni-error.log;
}
